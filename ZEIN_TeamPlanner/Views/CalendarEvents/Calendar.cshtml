@{
    ViewData["Title"] = "Calendar - " + ViewBag.GroupName;
    var groupId = ViewBag.GroupId;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="~/css/calendarEventCalendar.css" />

<div class="container">
    <h2>Calendar for @ViewBag.GroupName</h2>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="button-group">
        <a asp-action="Create" asp-route-groupId="@groupId" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Create New Event
        </a>
        <a asp-action="Index" asp-route-groupId="@groupId" class="btn btn-info">
            <i class="bi bi-list-ul"></i> View List
        </a>
        <a asp-controller="Groups" asp-action="Details" asp-route-id="@groupId" class="btn btn-secondary">
            <i class="bi bi-arrow-left-circle"></i> Back to Group
        </a>
    </div>

    <div id="calendar"></div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                editable: false, // Disable drag-and-drop
                events: {
                    url: '@Url.Action("GetEvents", "CalendarEvents")',
                    method: 'GET',
                    extraParams: {
                        groupId: @groupId
                    }
                },
                eventClick: function (info) {
                    window.location.href = '@Url.Action("Details", "CalendarEvents")/' + info.event.id;
                },
                eventDrop: function (info) {
                    updateEventTime(info.event);
                },
                eventResize: function (info) {
                    updateEventTime(info.event);
                },
                eventTimeFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    timeZoneName: 'short'
                },
                eventDidMount: function (info) {
                    if (info.event.extendedProps.type === 'Meeting') {
                        info.el.classList.add('meeting');
                    } else if (info.event.extendedProps.type === 'Deadline') {
                        info.el.classList.add('deadline');
                    } else if (info.event.extendedProps.type === 'Reminder') {
                        info.el.classList.add('reminder');
                    }
                }
            });

            function updateEventTime(event) {
                fetch('@Url.Action("UpdateEventTime", "CalendarEvents")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        id: event.id,
                        start: event.start.toISOString(),
                        end: event.end ? event.end.toISOString() : null
                    })
                })
                .then(response => {
                    if (!response.ok) {
                        alert('Không thể cập nhật thời gian sự kiện.');
                        calendar.refetchEvents();
                    } else {
                        // Optional: Trigger TempData success message
                    }
                })
                .catch(() => {
                    alert('Lỗi khi cập nhật sự kiện.');
                    calendar.refetchEvents();
                });
            }

            calendar.render();
        });
    </script>
}