@using System.Security.Claims
@model ZEIN_TeamPlanner.Models.Group

@{
    ViewData["Title"] = Model.GroupName;
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var currentMember = Model.Members.FirstOrDefault(m => m.UserId == currentUserId && m.LeftAt == null);
    var userRole = currentMember?.Role.ToString() ?? "Not a member";
    var user = currentMember?.User;
}

@section Styles {
    <link href="~/css/groupDetails.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
}

<div class="group-details-layout">
    <!-- Header Section -->
    <div class="title-container">
        <a asp-action="Index" class="btn btn-outline-secondary btn-sm" title="Back to Groups">
            <i class="bi bi-arrow-left"></i>
        </a>
        <h2 class="title-text">
            <i class="bi bi-people me-2"></i> @Model.GroupName
        </h2>
        <div class="action-buttons">
            @if (ViewBag.IsAdmin)
            {
                <a asp-action="Edit" asp-route-id="@Model.GroupId" class="btn btn-outline-primary btn-sm ms-2" title="Edit Group">
                    <i class="bi bi-pencil"></i>
                </a>
                <a asp-action="Delete" asp-route-id="@Model.GroupId" class="btn btn-outline-danger btn-sm ms-2" title="Delete Group">
                    <i class="bi bi-trash"></i>
                </a>
            }
            @if (!ViewBag.IsAdmin && currentMember != null)
            {
                <form asp-action="LeaveGroup" method="post" class="d-inline">
                    <input type="hidden" name="groupId" value="@Model.GroupId" />
                    <button type="submit" class="btn btn-outline-warning btn-sm ms-2" title="Leave Group" onclick="return confirm('Bạn có chắc muốn rời nhóm @Model.GroupName?')">
                        <i class="bi bi-box-arrow-right"></i>
                    </button>
                </form>
            }
        </div>
    </div>

    <!-- Alerts -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Group Details and User Information -->
    <div class="details-row">
        <div class="card details-card">
            <div class="card-header">
                <i class="bi bi-info-circle"></i> Group Details
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">Name</dt>
                    <dd class="col-sm-9">@Model.GroupName</dd>
                    <dt class="col-sm-3">Description</dt>
                    <dd class="col-sm-9">@(Model.Description ?? "No description provided")</dd>
                    <dt class="col-sm-3">Created By</dt>
                    <dd class="col-sm-9">@Model.CreatedByUser?.FullName</dd>
                    <dt class="col-sm-3">Created At</dt>
                    <dd class="col-sm-9">@Model.CreateAt.ToString("dd MMM yyyy")</dd>
                </dl>
            </div>
        </div>
        <div class="card role-card">
            <div class="card-header">
                <i class="bi bi-person-circle"></i> Your Information
            </div>
            <div class="card-body">
                @if (user != null)
                {
                    <div class="d-flex align-items-center mb-3">
                        <img src="@user.AvatarUrl" alt="@user.FullName's avatar" class="avatar-img me-3" />
                        <h5 class="mb-0">@user.FullName</h5>
                    </div>
                    <dl class="row">
                        <dt class="col-sm-4">Role</dt>
                        <dd class="col-sm-8">@userRole</dd>
                        <dt class="col-sm-4">Email</dt>
                        <dd class="col-sm-8">@user.UserName</dd>
                        <dt class="col-sm-4">Joined At</dt>
                        <dd class="col-sm-8">@(currentMember?.JoinedAt.ToString("dd MMM yyyy") ?? "N/A")</dd>
                    </dl>
                }
                else
                {
                    <div class="empty-state">
                        <i class="bi bi-info-circle display-4"></i>
                        <p>Not a member of this group.</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="details-row mb-4">
        <!-- Bar Chart -->
        <div class="card bar-card">
            <div class="card-header">
                <i class="bi bi-bar-chart"></i> Task Progress by Date
            </div>
            <div class="card-body">
                <canvas id="bar-chart" style="max-height: 400px; width: 100%;"></canvas>
            </div>
        </div>
        <!-- Pie Chart -->
        <div class="card pie-card">
            <div class="card-header">
                <i class="bi bi-pie-chart"></i> Task Status Distribution
            </div>
            <div class="card-body">
                <canvas id="pie-chart" style="max-height: 400px; width: 100%;"></canvas>
            </div>
        </div>
    </div>

    <!-- Members Card -->
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <span><i class="bi bi-people"></i> Members</span>
            @if (ViewBag.IsAdmin)
            {
                <button class="btn btn-outline-primary btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#inviteForm" aria-expanded="false" aria-controls="inviteForm" title="Invite Member">
                    <i class="bi bi-person-plus"></i>
                </button>
            }
        </div>
        <div class="card-body">
            @if (ViewBag.IsAdmin)
            {
                <div class="collapse mb-3" id="inviteForm">
                    <form asp-action="InviteMember" method="post">
                        <input type="hidden" name="groupId" value="@Model.GroupId" />
                        <div class="form-group">
                            <label for="email">Email:</label>
                            <input type="email" name="email" id="email" class="form-control" required />
                        </div>
                        <button type="submit" class="btn btn-outline-primary mt-2">
                            <i class="bi bi-envelope"></i> Invite
                        </button>
                    </form>
                </div>
            }
            @if (Model.Members.Any(m => m.LeftAt == null))
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Joined At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var member in Model.Members.Where(m => m.LeftAt == null))
                        {
                            <tr>
                                <td>
                                    <img src="@member.User.AvatarUrl" alt="@member.User.FullName's avatar" class="avatar-img" />
                                </td>
                                <td>@member.User.FullName</td>
                                <td>@member.User.UserName</td>
                                <td>@member.Role</td>
                                <td>@member.JoinedAt.ToString("dd MMM yyyy")</td>
                                <td>
                                    @if (ViewBag.IsAdmin && member.UserId != currentUserId)
                                    {
                                        <form asp-action="RemoveMember" method="post" class="d-inline">
                                            <input type="hidden" name="groupId" value="@Model.GroupId" />
                                            <input type="hidden" name="memberId" value="@member.UserId" />
                                            <button type="submit" class="btn btn-sm btn-outline-danger" style="width: 80px" title="Remove Member" onclick="return confirm('Bạn có chắc muốn xóa @member.User.FullName khỏi nhóm?')">
                                                <i class="bi bi-person-x"></i>
                                            </button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="empty-state">
                    <i class="bi bi-info-circle display-4"></i>
                    <p>No members in this group.</p>
                </div>
            }
        </div>
    </div>

    <!-- Navigation Buttons -->
    <div class="card">
        <div class="card-body d-flex gap-2">
            <a asp-controller="TaskItems" asp-action="Index" asp-route-groupId="@Model.GroupId" class="btn btn-outline-info">
                <i class="bi bi-list-task"></i> View Tasks
            </a>
            <a asp-controller="CalendarEvents" asp-action="Index" asp-route-groupId="@Model.GroupId" class="btn btn-outline-info">
                <i class="bi bi-calendar-event"></i> View Events
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Kiểm tra thư viện
            if (typeof $ === 'undefined') {
                console.error("jQuery is not loaded at", new Date().toISOString());
                $("#bar-chart").parent().html('<div class="empty-state"><i class="bi bi-bar-chart display-4"></i><p>jQuery not loaded.</p></div>');
                $("#pie-chart").parent().html('<div class="empty-state"><i class="bi bi-pie-chart display-4"></i><p>jQuery not loaded.</p></div>');
                return;
            }
            if (typeof Chart === 'undefined') {
                console.error("Chart.js is not loaded at", new Date().toISOString());
                $("#bar-chart").parent().html('<div class="empty-state"><i class="bi bi-bar-chart display-4"></i><p>Chart.js not loaded.</p></div>');
                $("#pie-chart").parent().html('<div class="empty-state"><i class="bi bi-pie-chart display-4"></i><p>Chart.js not loaded.</p></div>');
                return;
            }

            // Lấy dữ liệu tasks từ server
            $.ajax({
                url: "/Groups/GetTasks",
                method: "GET",
                data: { groupId: @Model.GroupId },
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                success: function (response) {
                    console.log("Data fetched at", new Date().toISOString(), ":", JSON.stringify(response, null, 2));

                    // Bar Chart
                    var tasks = response.tasks || [];
                    if (tasks.length === 0) {
                        console.warn("No tasks available for GroupId: @Model.GroupId at", new Date().toISOString());
                        $("#bar-chart").parent().html('<div class="empty-state"><i class="bi bi-bar-chart display-4"></i><p>No tasks available.</p></div>');
                    } else {
                        var tasksByDate = tasks.reduce((acc, task) => {
                            acc[task.createdAt] = acc[task.createdAt] || { ToDo: 0, InProgress: 0, Done: 0, Blocked: 0 };
                            acc[task.createdAt][task.status] = (acc[task.createdAt][task.status] || 0) + 1;
                            return acc;
                        }, {});
                        var labels = Object.keys(tasksByDate);
                        var datasets = [
                            { label: 'ToDo', data: labels.map(date => tasksByDate[date].ToDo || 0), backgroundColor: '#00c4b4' },
                            { label: 'InProgress', data: labels.map(date => tasksByDate[date].InProgress || 0), backgroundColor: '#ffc107' },
                            { label: 'Done', data: labels.map(date => tasksByDate[date].Done || 0), backgroundColor: '#00AE72' },
                            { label: 'Blocked', data: labels.map(date => tasksByDate[date].Blocked || 0), backgroundColor: '#ff6b6b' }
                        ];
                        var ctxBar = document.getElementById('bar-chart').getContext('2d');
                        new Chart(ctxBar, {
                            type: 'bar',
                            data: {
                                labels: labels,
                                datasets: datasets
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    x: { title: { display: true, text: 'Date' } },
                                    y: { title: { display: true, text: 'Number of Tasks' }, beginAtZero: true }
                                },
                                plugins: {
                                    legend: { position: 'top', labels: { font: { size: 12, family: 'Roboto' }, color: '#003825' } }
                                }
                            }
                        });
                    }

                    // Pie Chart
                    var statusCounts = response.statusCounts;
                    if (!statusCounts || statusCounts.length === 0) {
                        console.warn("No status counts available for GroupId: @Model.GroupId at", new Date().toISOString());
                        $("#pie-chart").parent().html('<div class="empty-state"><i class="bi bi-pie-chart display-4"></i><p>No status data available.</p></div>');
                        return;
                    }

                    var labels = statusCounts.map(sc => sc.status.replace("InProgress", "In Progress").replace("ToDo", "To Do"));
                    var data = statusCounts.map(sc => sc.count);
                    var ctxPie = document.getElementById('pie-chart').getContext('2d');
                    new Chart(ctxPie, {
                        type: 'pie',
                        data: {
                            labels: labels,
                            datasets: [{
                                data: data,
                                backgroundColor: ['#00c4b4', '#ffc107', '#00AE72', '#ff6b6b'],
                                borderColor: '#fff',
                                borderWidth: 2
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'bottom',
                                    labels: {
                                        font: { size: 12, family: 'Roboto' },
                                        color: '#003825'
                                    }
                                }
                            }
                        }
                    });
                },
                error: function (err) {
                    console.error("Error fetching data at", new Date().toISOString(), ":", err.status, JSON.stringify(err.responseText, null, 2));
                    $("#bar-chart").parent().html('<div class="empty-state"><i class="bi bi-bar-chart display-4"></i><p>Error loading tasks: ' + (err.responseText || 'Unknown error') + '</p></div>');
                    $("#pie-chart").parent().html('<div class="empty-state"><i class="bi bi-pie-chart display-4"></i><p>Error loading tasks: ' + (err.responseText || 'Unknown error') + '</p></div>');
                }
            });
        });
    </script>
}