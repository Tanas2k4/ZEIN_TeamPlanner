@using System.Security.Claims
@model IEnumerable<ZEIN_TeamPlanner.Models.Group>

@{
    ViewData["Title"] = "My Groups";
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

@section Styles {
    <link href="~/css/groupIndex.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
}

@section Scripts {
    <script>
        let debounceTimer;
        function debounce(func, wait) {
            return function () {
                clearTimeout(debounceTimer);
                debounceTimer = setTimeout(() => func.apply(this, arguments), wait);
            };
        }

        function searchGroups() {
            const nameSearch = document.getElementById('nameSearch').value;
            const dateSearch = document.getElementById('dateSearch').value;
            const roleSearch = document.getElementById('roleSearch').value;

            fetch(`/Groups/Search?nameSearch=${encodeURIComponent(nameSearch)}&dateSearch=${encodeURIComponent(dateSearch)}&roleSearch=${encodeURIComponent(roleSearch)}`)
                .then(response => response.json())
                .then(data => {
                    const groupsGrid = document.getElementById('groupsGrid');
                    groupsGrid.innerHTML = '';

                    if (data.length === 0) {
                        groupsGrid.innerHTML = `
                            <div class="empty-state">
                                <i class="bi bi-info-circle display-4"></i>
                                <p>No groups found. Create one to get started!</p>
                            </div>`;
                        return;
                    }

                    data.forEach(group => {
                        const groupCard = document.createElement('a');
                        groupCard.href = `/Groups/Details/${group.groupId}`;
                        groupCard.className = `card group-card ${group.isAdmin ? 'admin-card' : ''}`;
                        groupCard.innerHTML = `
                            <div class="card-header">
                                <i class="bi bi-people"></i> ${group.groupName}
                            </div>
                            <div class="card-body">
                                <div class="group-info">
                                    <p><strong>Description:</strong> ${group.description}</p>
                                    <p><strong>Members:</strong> ${group.memberCount}</p>
                                    <p><strong>Created At:</strong> ${group.createAt}</p>
                                    <p><strong>Your Role:</strong> ${group.role}</p>
                                </div>
                            </div>`;
                        groupsGrid.appendChild(groupCard);
                    });
                })
                .catch(error => {
                    console.error('Error:', error);
                    groupsGrid.innerHTML = `
                        <div class="empty-state">
                            <i class="bi bi-exclamation-triangle display-4"></i>
                            <p>An error occurred while searching groups.</p>
                        </div>`;
                });
        }

        document.getElementById('nameSearch').addEventListener('input', debounce(searchGroups, 300));
        document.getElementById('dateSearch').addEventListener('change', searchGroups);
        document.getElementById('roleSearch').addEventListener('change', searchGroups);
        window.addEventListener('load', searchGroups);
    </script>
}

<div class="group-index-layout">
    <!-- Header Section -->
    <div class="title-container">
        <h2 class="title-text">
            <i class="bi bi-people me-2"></i> My Groups
        </h2>
        <a asp-action="Create" class="btn btn-outline-primary btn-sm" title="Create New Group">
            <i class="bi bi-plus-circle"></i>
        </a>
    </div>

    <!-- Alerts -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Search Form -->
    <div class="card mb-4">
        <div class="card-header">
            <i class="bi bi-search"></i> Search Groups
        </div>
        <div class="card-body">
            <div class="search-form">
                <div class="row g-3">
                    <div class="col-md-4">
                        <label for="nameSearch" class="form-label">Group Name</label>
                        <input type="text" name="nameSearch" id="nameSearch" class="form-control" placeholder="Enter group name" value="@ViewData["NameSearch"]" />
                    </div>
                    <div class="col-md-4">
                        <label for="dateSearch" class="form-label">Created At</label>
                        <input type="date" name="dateSearch" id="dateSearch" class="form-control" value="@ViewData["DateSearch"]" />
                    </div>
                    <div class="col-md-4">
                        <label for="roleSearch" class="form-label">Role</label>
                        <select name="roleSearch" id="roleSearch" class="form-control">
                            <option value="">All</option>
                            <option value="Admin" selected="@(ViewData["RoleSearch"] != null && ViewData["RoleSearch"].ToString() == "Admin")">Admin</option>
                            <option value="Member" selected="@(ViewData["RoleSearch"] != null && ViewData["RoleSearch"].ToString() == "Member")">Member</option>
                        </select>
                    </div>
                </div>
                <div class="mt-3">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-clockwise"></i> Reset
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Groups List -->
    <div class="groups-grid" id="groupsGrid">
        @if (Model.Any())
        {
            @foreach (var group in Model)
            {
                var isAdmin = group.Members.Any(m => m.UserId == currentUserId && m.Role == ZEIN_TeamPlanner.Models.GroupRole.Admin && m.LeftAt == null);
                var description = group.Description != null && group.Description.Length > 50 ? group.Description.Substring(0, 50) + "..." : (group.Description != null ? group.Description : "No description");
                var role = group.Members.FirstOrDefault(m => m.UserId == currentUserId && m.LeftAt == null);
                var roleDisplay = role != null ? role.Role.ToString() : "N/A";

                <a asp-action="Details" asp-route-id="@group.GroupId" class="card group-card @(isAdmin ? "admin-card" : "")">
                    <div class="card-header">
                        <i class="bi bi-people"></i> @group.GroupName
                    </div>
                    <div class="card-body">
                        <div class="group-info">
                            <p><strong>Description:</strong> @description</p>
                            <p><strong>Members:</strong> @group.Members.Count(m => m.LeftAt == null)</p>
                            <p><strong>Created At:</strong> @group.CreateAt.ToString("dd MMM yyyy")</p>
                            <p><strong>Your Role:</strong> @roleDisplay</p>
                        </div>
                    </div>
                </a>
            }
        }
        else
        {
            <div class="empty-state">
                <i class="bi bi-info-circle display-4"></i>
                <p>No groups found. Create one to get started!</p>
            </div>
        }
    </div>
</div>