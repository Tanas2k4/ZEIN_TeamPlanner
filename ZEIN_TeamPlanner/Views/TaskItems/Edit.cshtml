@model ZEIN_TeamPlanner.Models.EditTaskDto

@{
    ViewData["Title"] = "Edit Task - " + ViewBag.GroupName;
}

<h2>Edit Task in @ViewBag.GroupName</h2>

<form asp-action="Edit" method="post" id="editTaskForm">
    <input type="hidden" asp-for="TaskItemId" />
    <input type="hidden" asp-for="GroupId" />
    <div class="form-group mb-3">
        <label asp-for="Title" class="form-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Description" class="form-label"></label>
        <textarea asp-for="Description" class="form-control" rows="4"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Deadline" class="form-label"></label>
        <input asp-for="Deadline" class="form-control" type="date" id="deadline" value="@(Model.Deadline?.ToString("yyyy-MM-dd"))" />
        <span asp-validation-for="Deadline" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Status" class="form-label"></label>
        <select asp-for="Status" class="form-select">
            <option value="@TaskItem.TaskStatus.ToDo">To Do</option>
            <option value="@TaskItem.TaskStatus.InProgress">In Progress</option>
            <option value="@TaskItem.TaskStatus.Done">Done</option>
            <option value="@TaskItem.TaskStatus.Blocked">Blocked</option>
        </select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="AssignedToUserId" class="form-label">Assigned To</label>
        <select asp-for="AssignedToUserId" class="form-select" id="assigneeSelect">
            <option value="">Unassigned</option>
            @foreach (var member in ViewBag.Members)
            {
                <option value="@member.UserId" selected="@(Model.AssignedToUserId == member.UserId ? "selected" : "")">@member.FullName</option>
            }
        </select>
        <span asp-validation-for="AssignedToUserId" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="PriorityId" class="form-label">Priority</label>
        <select asp-for="PriorityId" class="form-select" id="prioritySelect">
            <option value="">None</option>
            @foreach (var priority in ViewBag.Priorities)
            {
                <option value="@priority.PriorityId" selected="@(Model.PriorityId == priority.PriorityId ? "selected" : "")">@priority.Name</option>
            }
        </select>
        <span asp-validation-for="PriorityId" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Tags" class="form-label">Tags (comma-separated)</label>
        <input asp-for="Tags" class="form-control" placeholder="e.g., urgent, feature" />
        <span asp-validation-for="Tags" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Save Changes</button>
    <a asp-action="Index" asp-route-groupId="@Model.GroupId" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#assigneeSelect').select2({
                placeholder: "Select assignee",
                allowClear: true
            });
            $('#prioritySelect').select2({
                placeholder: "Select priority",
                allowClear: true
            });

            const form = document.getElementById('editTaskForm');
            const deadlineInput = document.getElementById('deadline');

            form.addEventListener('submit', function (event) {
                let isValid = true;
                const now = new Date().toISOString().split('T')[0];
                const deadline = deadlineInput.value;

                if (deadline && deadline <= now) {
                    isValid = false;
                    deadlineInput.setCustomValidity("Hạn chót phải lớn hơn thời điểm hiện tại.");
                    deadlineInput.reportValidity();
                } else {
                    deadlineInput.setCustomValidity("");
                }

                if (!isValid) {
                    event.preventDefault();
                }
            });
        });
    </script>
}

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
}