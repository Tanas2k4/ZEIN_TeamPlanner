@model ZEIN_TeamPlanner.Models.EditTaskDto

@{
    ViewData["Title"] = "Edit Task - " + ViewBag.GroupName;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
<link rel="stylesheet" href="~/css/taskItemEdit.css" />

<div class="form-container">
    <h2>Edit Task in @ViewBag.GroupName</h2>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form asp-action="Edit" method="post" id="editTaskForm">
        <input type="hidden" asp-for="TaskItemId" />
        <input type="hidden" asp-for="GroupId" />
        <div class="form-group">
            <label asp-for="Title" class="form-label">Title</label>
            <input asp-for="Title" class="form-control" required />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Description" class="form-label">Description</label>
            <textarea asp-for="Description" class="form-control" rows="4"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Deadline" class="form-label">Deadline</label>
            <input asp-for="Deadline" class="form-control" type="datetime-local" id="deadline"
                   value="@(Model.Deadline.HasValue? Model.Deadline.Value.ToString("yyyy-MM-ddTHH:mm") : DateTime.Today.ToString("yyyy-MM-ddT09:00"))" />
            <small class="form-text text-muted">Please include both date and time (e.g., 09:00 AM) for the deadline.</small>
            <span asp-validation-for="Deadline" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Status" class="form-label">Status</label>
            <select asp-for="Status" class="form-select" id="statusSelect">
                <option value="@TaskItem.TaskStatus.ToDo">To Do</option>
                <option value="@TaskItem.TaskStatus.InProgress">In Progress</option>
                <option value="@TaskItem.TaskStatus.Done">Done</option>
                <option value="@TaskItem.TaskStatus.Blocked">Blocked</option>
            </select>
            <span asp-validation-for="Status" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="PriorityId" class="form-label">Priority</label>
            <select asp-for="PriorityId" class="form-select" id="prioritySelect">
                <option value="">None</option>
                @foreach (var priority in ViewBag.Priorities)
                {
                    <option value="@priority.PriorityId" selected="@(Model.PriorityId == priority.PriorityId ? "selected" : "")">@priority.Name</option>
                }
            </select>
            <span asp-validation-for="PriorityId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Tags" class="form-label">Tags (comma-separated)</label>
            <input asp-for="Tags" class="form-control" placeholder="e.g., urgent, feature" />
            <span asp-validation-for="Tags" class="text-danger"></span>
        </div>
        <div class="button-group">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-check-circle"></i> Save Changes
            </button>
            <a asp-action="Index" asp-route-groupId="@Model.GroupId" class="btn btn-secondary">
                <i class="bi bi-x-circle"></i> Cancel
            </a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#statusSelect').select2({
                placeholder: "Select status",
                allowClear: true
            });
            $('#prioritySelect').select2({
                placeholder: "Select priority",
                allowClear: true
            });

            const form = document.getElementById('editTaskForm');
            const deadlineInput = document.getElementById('deadline');

            // Ensure time is included if only date is selected
            deadlineInput.addEventListener('change', function () {
                if (this.value && !this.value.includes('T')) {
                    this.value += 'T09:00'; // Default to 09:00 if only date is selected
                }
            });

            // Validate deadline is in the future
            form.addEventListener('submit', function (event) {
                let isValid = true;
                const now = new Date().toISOString().slice(0, 16); // yyyy-MM-ddTHH:mm
                const deadline = deadlineInput.value;

                if (deadline && deadline <= now) {
                    isValid = false;
                    deadlineInput.setCustomValidity("Hạn chót phải lớn hơn thời điểm hiện tại.");
                    deadlineInput.reportValidity();
                } else {
                    deadlineInput.setCustomValidity("");
                }

                if (!isValid) {
                    event.preventDefault();
                }
            });
        });
    </script>
}