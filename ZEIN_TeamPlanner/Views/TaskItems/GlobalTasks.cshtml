@using System.Security.Claims
@model IEnumerable<ZEIN_TeamPlanner.Models.TaskItem>

@{
    ViewData["Title"] = "Global Tasks";
}

<h2>Global Tasks</h2>

@if (ViewBag.Message != null)
{
    <div class="alert alert-info">@ViewBag.Message</div>
}

<p>
    <a asp-controller="Groups" asp-action="Index" class="btn btn-primary">Back to Groups</a>
</p>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

@if (Model.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Group</th>
                <th>Title</th>
                <th>Status</th>
                <th>Deadline</th>
                <th>Assigned To</th>
                <th>Completed At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model)
            {
                <tr>
                    <td>
                        <a asp-controller="Groups" asp-action="Details" asp-route-id="@task.GroupId">
                            @(task.Group?.GroupName ?? "Unknown Group")
                        </a>
                    </td>
                    <td>@task.Title</td>
                    <td>
                        <form asp-action="UpdateStatus" method="post" style="display: flex">
                            <input type="hidden" name="taskId" value="@task.TaskItemId" />
                            <select name="status" class="form-select form-select-sm">
                                <option value="ToDo" selected="@(task.Status == TaskItem.TaskStatus.ToDo)">To Do</option>
                                <option value="InProgress" selected="@(task.Status == TaskItem.TaskStatus.InProgress)">In Progress</option>
                                <option value="Done" selected="@(task.Status == TaskItem.TaskStatus.Done)">Done</option>
                            </select>
                            <button type="submit" class="btn btn-sm btn-primary mt-1">Save</button>
                        </form>
                    </td>
                    <td>@(task.Deadline?.ToString("dd MMM yyyy HH:mm") ?? "None")</td>
                    <td>@(task.AssignedToUser?.FullName ?? "Unassigned")</td>
                    <td>@(task.CompletedAt?.ToString("dd MMM yyyy HH:mm") ?? "Not completed")</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@task.TaskItemId" class="btn btn-sm btn-info">Details</a>
                        @if (task.Group?.Members != null && task.Group.Members.Any(m => m.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier) && m.Role == GroupRole.Admin))
                        {
                            <a asp-action="Edit" asp-route-id="@task.TaskItemId" class="btn btn-sm btn-secondary">Edit</a>
                            <a asp-action="Delete" asp-route-id="@task.TaskItemId" class="btn btn-sm btn-danger">Delete</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No tasks found. Join or create a group to start adding tasks!</p>
}